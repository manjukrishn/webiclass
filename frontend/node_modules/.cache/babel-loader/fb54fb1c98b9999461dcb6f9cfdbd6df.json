{"ast":null,"code":"import _toConsumableArray from \"/home/manjukrishna/Desktop/web_mini_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/manjukrishna/Desktop/web_mini_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/manjukrishna/Desktop/web_mini_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/manjukrishna/Desktop/web_mini_project/frontend/src/components/AddProfessors.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nfunction ConfirmationDialogRaw(props) {\n  var _this = this;\n\n  var onClose = props.onClose,\n      valueProp = props.value,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"onClose\", \"value\", \"open\"]);\n\n  var _React$useState = React.useState(valueProp),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var radioGroupRef = React.useRef(null);\n\n  var getTimeFunc = function getTimeFunc() {\n    var d = new Date();\n    return d.getTime();\n  };\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      arr = _React$useState4[0],\n      setArr = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  var handleEntering = function handleEntering() {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  var finalValidation = function finalValidation() {\n    var i = 0;\n\n    for (i = 0; i < arr.length; i++) {\n      if (arr[i].invalid) return true;\n    }\n\n    return false;\n  };\n\n  var handledone = function handledone() {\n    var re = finalValidation();\n    if (re === false) onClose(value);\n  };\n\n  var validate = function validate(index) {\n    var mailFormat = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]{2,4})+)*$/;\n    var name = \"prof_email\";\n\n    if (arr[index][name].match(mailFormat)) {\n      arr[index].invalid = false;\n    } else {\n      arr[index].invalid = true;\n    }\n  };\n\n  var handleChange = function handleChange(index) {\n    return function (event) {\n      var newArr = _toConsumableArray(arr);\n\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      newArr[index][name] = value;\n      setArr(newArr);\n      validate(index);\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    maxWidth: \"sm\",\n    onEntering: handleEntering,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"confirmation-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontFamily: '\"Nunito\", sans-serif',\n      color: \"#272e4f\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Add Professors\")), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, !!arr.length && /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    style: {\n      color: \"#2c365d\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      paddingLeft: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      paddingLeft: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Unique Id\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, arr.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingTop: \"3%\",\n        width: \"200px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 23\n      }\n    }, !item.invalid ? /*#__PURE__*/React.createElement(TextField, {\n      name: \"prof_email\",\n      id: item.index,\n      value: item.prof_email,\n      variant: \"outlined\",\n      type: \"email\",\n      onChange: handleChange(index),\n      placeholder: \"Eg. john@gmail.com\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(TextField, {\n      error: true,\n      label: \"Invalid email\",\n      name: \"prof_email\",\n      id: item.index,\n      value: item.prof_email,\n      variant: \"outlined\",\n      type: \"email\",\n      onChange: handleChange(index),\n      placeholder: \"Eg. john@gmail.com\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingTop: \"3%\",\n        paddingLeft: \"5%\",\n        width: \"190px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      id: item.index,\n      onChange: handleChange(index),\n      name: \"prof_name\",\n      value: item.prof_name,\n      placeholder: \"Eg. john\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingTop: \"3%\",\n        paddingLeft: \"5%\",\n        width: \"190px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      variant: \"outlined\",\n      id: item.index,\n      onChange: handleChange(index),\n      name: \"prof_id\",\n      value: item.prof_id,\n      placeholder: \"Eg. john\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    })), !!(arr.length > 1) && /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        paddingTop: \"3%\",\n        width: \"5px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        setArr(arr.filter(function (itemIn) {\n          return itemIn.id !== item.id;\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(RemoveIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }))));\n  }))), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"5%\",\n      color: \"#949cdf\",\n      opacity: \"0.85\"\n    },\n    onClick: function onClick() {\n      setArr(function (prev) {\n        return [].concat(_toConsumableArray(prev), [{\n          id: getTimeFunc(),\n          index: getTimeFunc(),\n          prof_email: \"\",\n          prof_name: \"\",\n          invalid: false\n        }]);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"+ Add New\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handledone,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, \"Done\"))));\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\"\n    },\n    paper: {\n      width: \"80%\",\n      maxHeight: 435\n    }\n  };\n});\nexport default function ConfirmationDialog() {\n  var classes = useStyles();\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      open = _React$useState6[0],\n      setOpen = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"Notes\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      value = _React$useState8[0],\n      setValue = _React$useState8[1];\n\n  var handleClickListItem = function handleClickListItem() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClickListItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PersonAddIcon, {\n    style: {\n      fontSize: \"30px\",\n      marginLeft: \"10%\",\n      color: \"#0277bd\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ConfirmationDialogRaw, {\n    classes: {\n      paper: classes.paper\n    },\n    id: \"dialog-box\",\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/manjukrishna/Desktop/web_mini_project/frontend/src/components/AddProfessors.jsx"],"names":["React","PropTypes","RemoveIcon","TextField","PersonAddIcon","IconButton","makeStyles","Button","DialogTitle","DialogContent","DialogActions","Dialog","ConfirmationDialogRaw","props","onClose","valueProp","value","open","other","useState","setValue","radioGroupRef","useRef","getTimeFunc","d","Date","getTime","arr","setArr","useEffect","handleEntering","current","focus","finalValidation","i","length","invalid","handledone","re","validate","index","mailFormat","name","match","handleChange","event","newArr","target","fontFamily","color","paddingLeft","map","item","paddingTop","width","prof_email","prof_name","prof_id","filter","itemIn","id","marginTop","opacity","prev","propTypes","func","isRequired","bool","string","useStyles","theme","root","paper","maxHeight","ConfirmationDialog","classes","setOpen","handleClickListItem","handleClose","newValue","fontSize","marginLeft"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n  const getTimeFunc = () => {\n    let d = new Date();\n    return d.getTime();\n  };\n  const [arr, setArr] = React.useState([]);\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const finalValidation = () => {\n    let i = 0;\n    for (i = 0; i < arr.length; i++) {\n      if (arr[i].invalid) return true;\n    }\n    return false;\n  };\n  const handledone = () => {\n    const re = finalValidation();\n    if (re === false) onClose(value);\n  };\n\n  const validate = (index) => {\n    const mailFormat = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]{2,4})+)*$/;\n    const name = \"prof_email\";\n    if (arr[index][name].match(mailFormat)) {\n      arr[index].invalid = false;\n    } else {\n      arr[index].invalid = true;\n    }\n  };\n  const handleChange = (index) => (event) => {\n    const newArr = [...arr];\n    const { name, value } = event.target;\n    newArr[index][name] = value;\n    setArr(newArr);\n    validate(index);\n  };\n  return (\n    <div>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        maxWidth=\"sm\"\n        onEntering={handleEntering}\n        aria-labelledby=\"confirmation-dialog-title\"\n        open={open}\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">\n          <span\n            style={{ fontFamily: '\"Nunito\", sans-serif', color: \"#272e4f\" }}\n          >\n            Add Professors\n          </span>\n        </DialogTitle>\n        <DialogContent dividers>\n          {!!arr.length && (\n            <table>\n              <thead style={{ color: \"#2c365d\" }}>\n                <th>Email</th>\n                <th style={{ paddingLeft: \"20px\" }}>Name</th>\n                <th style={{ paddingLeft: \"20px\" }}>Unique Id</th>\n\n              </thead>\n              <tbody>\n                {arr.map((item, index) => {\n                  return (\n                    <tr>\n                      <td style={{ paddingTop: \"3%\", width: \"200px\" }}>\n                        {!item.invalid ? (\n                          <TextField\n                            name=\"prof_email\"\n                            id={item.index}\n                            value={item.prof_email}\n                            variant=\"outlined\"\n                            type=\"email\"\n                            onChange={handleChange(index)}\n                            placeholder=\"Eg. john@gmail.com\"\n                          />\n                        ) : (\n                          <TextField\n                            error\n                            label=\"Invalid email\"\n                            name=\"prof_email\"\n                            id={item.index}\n                            value={item.prof_email}\n                            variant=\"outlined\"\n                            type=\"email\"\n                            onChange={handleChange(index)}\n                            placeholder=\"Eg. john@gmail.com\"\n                          />\n                        )}\n                      </td>\n                      <td\n                        style={{\n                          paddingTop: \"3%\",\n                          paddingLeft: \"5%\",\n                          width: \"190px\"\n                        }}\n                      >\n                        <TextField\n                          variant=\"outlined\"\n                          id={item.index}\n                          onChange={handleChange(index)}\n                          name=\"prof_name\"\n                          value={item.prof_name}\n                          placeholder=\"Eg. john\"\n                        />\n                      </td>\n                      <td\n                        style={{\n                          paddingTop: \"3%\",\n                          paddingLeft: \"5%\",\n                          width: \"190px\"\n                        }}\n                      >\n                        <TextField\n                          variant=\"outlined\"\n                          id={item.index}\n                          onChange={handleChange(index)}\n                          name=\"prof_id\"\n                          value={item.prof_id}\n                          placeholder=\"Eg. john\"\n                        />\n                      </td>\n                      {!!(arr.length > 1) && (\n                        <td style={{ paddingTop: \"3%\", width: \"5px\" }}>\n                          <IconButton\n                            onClick={() => {\n                              setArr(\n                                arr.filter((itemIn) => itemIn.id !== item.id)\n                              );\n                            }}\n                          >\n                            <RemoveIcon />\n                          </IconButton>\n                        </td>\n                      )}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n          <Button\n            style={{ marginTop: \"5%\",\n          color:\"#949cdf\",\n          opacity:\"0.85\"\n          }}\n            onClick={() => {\n              setArr((prev) => {\n                return [\n                  ...prev,\n                  {\n                    id: getTimeFunc(),\n                    index: getTimeFunc(),\n                    prof_email: \"\",\n                    prof_name: \"\",\n                    invalid: false\n                  }\n                ];\n              });\n            }}\n          >\n            + Add New\n          </Button>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handledone} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"80%\",\n    maxHeight: 435\n  }\n}));\n\nexport default function ConfirmationDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(\"Notes\");\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (newValue) => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleClickListItem}>\n        <PersonAddIcon\n          style={{\n            fontSize: \"30px\",\n            marginLeft: \"10%\",\n            color: \"#0277bd\"\n          }}\n        />\n      </IconButton>\n      <ConfirmationDialogRaw\n        classes={{\n          paper: classes.paper\n        }}\n        id=\"dialog-box\"\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        value={value}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}