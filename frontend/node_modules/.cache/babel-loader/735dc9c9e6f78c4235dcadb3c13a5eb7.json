{"ast":null,"code":"import _slicedToArray from \"/home/manjukrishna/Desktop/web_mini_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/manjukrishna/Desktop/web_mini_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/manjukrishna/Desktop/web_mini_project/frontend/src/components/AddClass.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nfunction ConfirmationDialogRaw(props) {\n  var onClose = props.onClose,\n      valueProp = props.value,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"onClose\", \"value\", \"open\"]);\n\n  var _React$useState = React.useState(valueProp),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var radioGroupRef = React.useRef(null);\n  React.useEffect(function () {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  var handleEntering = function handleEntering() {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  var handleCancel = function handleCancel() {\n    onClose();\n  };\n\n  var handleOk = function handleOk() {\n    onClose(value);\n  };\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    maxWidth: \"xs\",\n    onEntering: handleEntering,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontFamily: '\"Nunito\", sans-serif',\n      color: \"#272e4f\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Add Class\")), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: \"15px\",\n      fontSize: \"18px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Section\"), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    inputProps: {\n      min: 0,\n      style: {\n        fontSize: \"100px\",\n        textAlign: \"center\"\n      }\n    },\n    name: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: \"10px\",\n      fontSize: \"18px\",\n      marginTop: \"30px\",\n      color: \"#2c365d\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"No of students\")), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      paddingLeft: \"15px\",\n      paddingTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"60px\"\n    },\n    inputProps: {\n      min: 0,\n      color: \"black\"\n    },\n    name: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: \"10px\",\n      fontSize: \"18px\",\n      marginTop: \"30px\",\n      color: \"#2c365d\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, \"No of subjects\")), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      paddingLeft: \"20px\",\n      paddingTop: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    style: {\n      width: \"60px\"\n    },\n    inputProps: {\n      min: 0,\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    autoFocus: true,\n    onClick: handleCancel,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOk,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Ok\")));\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      maxWidth: 360\n    },\n    paper: {\n      width: \"80%\",\n      height: 500\n    }\n  };\n});\nexport default function ConfirmationDialog() {\n  var classes = useStyles();\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      open = _React$useState4[0],\n      setOpen = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"Dione\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      value = _React$useState6[0],\n      setValue = _React$useState6[1];\n\n  var handleClickListItem = function handleClickListItem() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"div\",\n    role: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    style: {\n      fontSize: \"30px\",\n      color: \"#0277bd\",\n      opacity: \"0.8\"\n    },\n    onClick: handleClickListItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ConfirmationDialogRaw, {\n    classes: {\n      paper: classes.paper\n    },\n    id: \"ringtone-menu\",\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/manjukrishna/Desktop/web_mini_project/frontend/src/components/AddClass.jsx"],"names":["React","PropTypes","TextField","makeStyles","Button","Tooltip","AddCircleIcon","IconButton","List","DialogTitle","DialogContent","DialogActions","Dialog","withStyles","ConfirmationDialogRaw","props","onClose","valueProp","value","open","other","useState","setValue","radioGroupRef","useRef","useEffect","handleEntering","current","focus","handleCancel","handleOk","handleChange","event","target","fontFamily","color","marginBottom","fontSize","min","style","textAlign","marginTop","paddingLeft","paddingTop","width","propTypes","func","isRequired","bool","string","useStyles","theme","root","maxWidth","paper","height","ConfirmationDialog","classes","setOpen","handleClickListItem","handleClose","newValue","opacity"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleCancel = () => {\n    onClose();\n  };\n\n  const handleOk = () => {\n    onClose(value);\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <Dialog\n      disableBackdropClick\n      disableEscapeKeyDown\n      maxWidth=\"xs\"\n      onEntering={handleEntering}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle>\n        <span style={{ fontFamily: '\"Nunito\", sans-serif', color: \"#272e4f\" }}>\n          Add Class\n        </span>\n      </DialogTitle>\n      <DialogContent dividers>\n        <div style={{ marginBottom: \"15px\", fontSize: \"18px\" }}>Section</div>\n        <TextField\n          variant=\"outlined\"\n          inputProps={{\n            min: 0,\n            style: { fontSize: \"100px\", textAlign: \"center\" }\n          }}\n          name=\"section\"\n        />\n        <table>\n          <tr>\n            <td>\n              <div\n                style={{\n                  marginBottom: \"10px\",\n                  fontSize: \"18px\",\n                  marginTop: \"30px\",\n                  color: \"#2c365d\"\n                }}\n              >\n                No of students\n              </div>\n            </td>\n            <td style={{ paddingLeft: \"15px\", paddingTop: \"20px\" }}>\n              <TextField\n                style={{ width: \"60px\" }}\n                inputProps={{\n                  min: 0,\n                  color: \"black\"\n                }}\n                name=\"section\"\n\n              />\n            </td>\n          </tr>\n        </table>\n\n        <table>\n          <tr>\n            <td>\n              <div\n                style={{\n                  marginBottom: \"10px\",\n                  fontSize: \"18px\",\n                  marginTop: \"30px\",\n                  color: \"#2c365d\"\n                }}\n              >\n                No of subjects\n              </div>\n            </td>\n            <td style={{ paddingLeft: \"20px\", paddingTop: \"20px\" }}>\n              <TextField\n                style={{ width: \"60px\" }}\n                inputProps={{\n                  min: 0,\n                  color: \"black\"\n                }}\n              />\n            </td>\n          </tr>\n        </table>\n      </DialogContent>\n      <DialogActions>\n        <Button autoFocus onClick={handleCancel} color=\"primary\">\n          Cancel\n        </Button>\n        <Button onClick={handleOk} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360\n  },\n  paper: {\n    width: \"80%\",\n    height: 500\n  }\n}));\n\nexport default function ConfirmationDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(\"Dione\");\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (newValue) => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <List component=\"div\" role=\"list\">\n        <Tooltip title=\"Add class\">\n          <IconButton>\n            <AddCircleIcon\n              style={{\n                fontSize: \"30px\",\n                color: \"#0277bd\",\n                opacity: \"0.8\"\n              }}\n              onClick={handleClickListItem}\n            />\n          </IconButton>\n        </Tooltip>\n        <ConfirmationDialogRaw\n          classes={{\n            paper: classes.paper\n          }}\n          id=\"ringtone-menu\"\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          value={value}\n        />\n      </List>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}