{"ast":null,"code":"import _objectSpread from \"/home/manjukrishna/Desktop/web_mini_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/manjukrishna/Desktop/web_mini_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/manjukrishna/Desktop/web_mini_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/manjukrishna/Desktop/web_mini_project/frontend/src/components/AddProfessors.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nfunction ConfirmationDialogRaw(props) {\n  var onClose = props.onClose,\n      valueProp = props.value,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"onClose\", \"value\", \"open\"]);\n\n  var _React$useState = React.useState(valueProp),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var radioGroupRef = React.useRef(null);\n\n  var getTimeFunc = function getTimeFunc() {\n    var d = new Date();\n    return d.getTime();\n  };\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      arr = _React$useState4[0],\n      setArr = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    invalidEmail: false,\n    invalidUid: false\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      invalid = _React$useState6[0],\n      setInvalid = _React$useState6[1];\n\n  var _React$useState7 = React.useState({\n    uid: \"\",\n    name: \"\",\n    email: \"\"\n  }),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      credentials = _React$useState8[0],\n      setCredentials = _React$useState8[1];\n\n  React.useEffect(function () {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  var handleEntering = function handleEntering() {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  var finalValidation = function finalValidation() {\n    if (!invalid.invalidEmail && !invalid.invalidUid) return false;\n    return true;\n  };\n\n  var handledone = function handledone() {\n    var re = finalValidation();\n    if (re === false) onClose(value);\n  };\n\n  var validate = function validate() {\n    var mailFormat = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]{2,4})+)*$/;\n    var name = \"email\";\n\n    if (credentials.email.match(mailFormat)) {\n      invalid.invalidEmail = false;\n    } else {\n      invalid.invalidEmail = true;\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setCredentials(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        [name]: value\n      });\n    });\n    validate();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    maxWidth: \"sm\",\n    onEntering: handleEntering,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"confirmation-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontFamily: '\"Nunito\", sans-serif',\n      color: \"#272e4f\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Add Professors\")), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, !!arr.length && /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    style: {\n      color: \"#2c365d\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      paddingLeft: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    style: {\n      paddingLeft: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Unique Id\")), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      paddingTop: \"3%\",\n      width: \"200px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }\n  }, !invalid.invalidEmail ? /*#__PURE__*/React.createElement(TextField, {\n    name: \"prof_email\",\n    value: credentials.email,\n    variant: \"outlined\",\n    type: \"email\",\n    onChange: handleChange,\n    placeholder: \"Eg. john@gmail.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 27\n    }\n  }) : /*#__PURE__*/React.createElement(TextField, {\n    error: true,\n    label: \"Invalid email\",\n    name: \"prof_email\",\n    value: credentials.email,\n    variant: \"outlined\",\n    type: \"email\",\n    onChange: handleChange,\n    placeholder: \"Eg. john@gmail.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      paddingTop: \"3%\",\n      paddingLeft: \"5%\",\n      width: \"190px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    onChange: handleChange,\n    name: \"prof_name\",\n    value: credentials.name,\n    placeholder: \"Eg. john\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    style: {\n      paddingTop: \"3%\",\n      paddingLeft: \"5%\",\n      width: \"190px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    onChange: handleChange,\n    name: \"prof_id\",\n    value: credentials.uid,\n    placeholder: \"Eg. john\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"5%\",\n      color: \"#949cdf\",\n      opacity: \"0.85\"\n    },\n    onClick: function onClick() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"+ Add New\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handledone,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"Done\"))));\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\"\n    },\n    paper: {\n      width: \"80%\",\n      maxHeight: 435\n    }\n  };\n});\nexport default function ConfirmationDialog() {\n  var classes = useStyles();\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      open = _React$useState10[0],\n      setOpen = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"Notes\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      value = _React$useState12[0],\n      setValue = _React$useState12[1];\n\n  var handleClickListItem = function handleClickListItem() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleClickListItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PersonAddIcon, {\n    style: {\n      fontSize: \"30px\",\n      marginLeft: \"10%\",\n      color: \"#0277bd\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ConfirmationDialogRaw, {\n    classes: {\n      paper: classes.paper\n    },\n    id: \"dialog-box\",\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/manjukrishna/Desktop/web_mini_project/frontend/src/components/AddProfessors.jsx"],"names":["React","PropTypes","RemoveIcon","TextField","PersonAddIcon","IconButton","makeStyles","Button","DialogTitle","DialogContent","DialogActions","Dialog","ConfirmationDialogRaw","props","onClose","valueProp","value","open","other","useState","setValue","radioGroupRef","useRef","getTimeFunc","d","Date","getTime","arr","setArr","invalidEmail","invalidUid","invalid","setInvalid","uid","name","email","credentials","setCredentials","useEffect","handleEntering","current","focus","finalValidation","handledone","re","validate","mailFormat","match","handleChange","event","target","prev","fontFamily","color","length","paddingLeft","paddingTop","width","marginTop","opacity","propTypes","func","isRequired","bool","string","useStyles","theme","root","paper","maxHeight","ConfirmationDialog","classes","setOpen","handleClickListItem","handleClose","newValue","fontSize","marginLeft"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA,MAC5BC,OAD4B,GACkBD,KADlB,CAC5BC,OAD4B;AAAA,MACZC,SADY,GACkBF,KADlB,CACnBG,KADmB;AAAA,MACDC,IADC,GACkBJ,KADlB,CACDI,IADC;AAAA,MACQC,KADR,4BACkBL,KADlB;;AAAA,wBAEVb,KAAK,CAACmB,QAAN,CAAeJ,SAAf,CAFU;AAAA;AAAA,MAE7BC,KAF6B;AAAA,MAEtBI,QAFsB;;AAGpC,MAAMC,aAAa,GAAGrB,KAAK,CAACsB,MAAN,CAAa,IAAb,CAAtB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,WAAOD,CAAC,CAACE,OAAF,EAAP;AACD,GAHD;;AAJoC,yBAQd1B,KAAK,CAACmB,QAAN,CAAe,EAAf,CARc;AAAA;AAAA,MAQ7BQ,GAR6B;AAAA,MAQxBC,MARwB;;AAAA,yBAST5B,KAAK,CAACmB,QAAN,CAAe;AACxCU,IAAAA,YAAY,EAAC,KAD2B;AAExCC,IAAAA,UAAU,EAAC;AAF6B,GAAf,CATS;AAAA;AAAA,MAS7BC,OAT6B;AAAA,MASrBC,UATqB;;AAAA,yBAaDhC,KAAK,CAACmB,QAAN,CAAe;AAChDc,IAAAA,GAAG,EAAC,EAD4C;AAEhDC,IAAAA,IAAI,EAAC,EAF2C;AAGhDC,IAAAA,KAAK,EAAC;AAH0C,GAAf,CAbC;AAAA;AAAA,MAa7BC,WAb6B;AAAA,MAajBC,cAbiB;;AAkBpCrC,EAAAA,KAAK,CAACsC,SAAN,CAAgB,YAAM;AACpB,QAAI,CAACrB,IAAL,EAAW;AACTG,MAAAA,QAAQ,CAACL,SAAD,CAAR;AACD;AACF,GAJD,EAIG,CAACA,SAAD,EAAYE,IAAZ,CAJH;;AAMA,MAAMsB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIlB,aAAa,CAACmB,OAAd,IAAyB,IAA7B,EAAmC;AACjCnB,MAAAA,aAAa,CAACmB,OAAd,CAAsBC,KAAtB;AACD;AACF,GAJD;;AAMA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAG,CAACX,OAAO,CAACF,YAAT,IAAyB,CAACE,OAAO,CAACD,UAArC,EACA,OAAO,KAAP;AACA,WAAO,IAAP;AACD,GAJD;;AAKA,MAAMa,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMC,EAAE,GAAGF,eAAe,EAA1B;AACA,QAAIE,EAAE,KAAK,KAAX,EAAkB9B,OAAO,CAACE,KAAD,CAAP;AACnB,GAHD;;AAKA,MAAM6B,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAMC,UAAU,GAAG,2EAAnB;AACA,QAAMZ,IAAI,GAAG,OAAb;;AACA,QAAIE,WAAW,CAACD,KAAZ,CAAkBY,KAAlB,CAAwBD,UAAxB,CAAJ,EAAyC;AACvCf,MAAAA,OAAO,CAACF,YAAR,GAAqB,KAArB;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACF,YAAR,GAAqB,IAArB;AACD;AACF,GARD;;AASA,MAAMmB,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,wBACPA,KAAK,CAACC,MADC;AAAA,QACvBhB,IADuB,iBACvBA,IADuB;AAAA,QACjBlB,KADiB,iBACjBA,KADiB;AAE/BqB,IAAAA,cAAc,CAAC,UAACc,IAAD,EAAQ;AACrB,6CACKA,IADL;AAEE,SAACjB,IAAD,GAAOlB;AAFT;AAID,KALa,CAAd;AAMA6B,IAAAA,QAAQ;AACR,GATD;;AAUA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,oBAAoB,MADtB;AAEE,IAAA,oBAAoB,MAFtB;AAGE,IAAA,QAAQ,EAAC,IAHX;AAIE,IAAA,UAAU,EAAEN,cAJd;AAKE,uBAAgB,2BALlB;AAME,IAAA,IAAI,EAAEtB;AANR,KAOMC,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBASE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AAAEkC,MAAAA,UAAU,EAAE,sBAAd;AAAsCC,MAAAA,KAAK,EAAE;AAA7C,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CATF,eAgBE,oBAAC,aAAD;AAAe,IAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,CAAC1B,GAAG,CAAC2B,MAAN,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAE;AAAED,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAI,IAAA,KAAK,EAAE;AAAEE,MAAAA,WAAW,EAAE;AAAf,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAI,IAAA,KAAK,EAAE;AAAEA,MAAAA,WAAW,EAAE;AAAf,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,KAAK,EAAE;AAA3B,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC1B,OAAO,CAACF,YAAT,gBACC,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,KAAK,EAAEO,WAAW,CAACD,KAFrB;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAEa,YALZ;AAME,IAAA,WAAW,EAAC,oBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAUC,oBAAC,SAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,KAAK,EAAC,eAFR;AAGE,IAAA,IAAI,EAAC,YAHP;AAIE,IAAA,KAAK,EAAEZ,WAAW,CAACD,KAJrB;AAKE,IAAA,OAAO,EAAC,UALV;AAME,IAAA,IAAI,EAAC,OANP;AAOE,IAAA,QAAQ,EAAEa,YAPZ;AAQE,IAAA,WAAW,EAAC,oBARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADF,eAwBE;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,UAAU,EAAE,IADP;AAELD,MAAAA,WAAW,EAAE,IAFR;AAGLE,MAAAA,KAAK,EAAE;AAHF,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,QAAQ,EAAET,YAFZ;AAGE,IAAA,IAAI,EAAC,WAHP;AAIE,IAAA,KAAK,EAAEZ,WAAW,CAACF,IAJrB;AAKE,IAAA,WAAW,EAAC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAxBF,eAuCE;AACE,IAAA,KAAK,EAAE;AACLsB,MAAAA,UAAU,EAAE,IADP;AAELD,MAAAA,WAAW,EAAE,IAFR;AAGLE,MAAAA,KAAK,EAAE;AAHF,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAC,UADV;AAEE,IAAA,QAAQ,EAAET,YAFZ;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,KAAK,EAAEZ,WAAW,CAACH,GAJrB;AAKE,IAAA,WAAW,EAAC,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAvCF,CADN,CAPF,CAFJ,eAoEE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEyB,MAAAA,SAAS,EAAE,IAAb;AACTL,MAAAA,KAAK,EAAC,SADG;AAETM,MAAAA,OAAO,EAAC;AAFC,KADT;AAKE,IAAA,OAAO,EAAE,mBAAM,CAAE,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBApEF,CAhBF,eA8FE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEhB,UAAjB;AAA6B,IAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CA9FF,CADF,CADF;AAwGD;;AAED/B,qBAAqB,CAACgD,SAAtB,GAAkC;AAChC9C,EAAAA,OAAO,EAAEb,SAAS,CAAC4D,IAAV,CAAeC,UADQ;AAEhC7C,EAAAA,IAAI,EAAEhB,SAAS,CAAC8D,IAAV,CAAeD,UAFW;AAGhC9C,EAAAA,KAAK,EAAEf,SAAS,CAAC+D,MAAV,CAAiBF;AAHQ,CAAlC;AAMA,IAAMG,SAAS,GAAG3D,UAAU,CAAC,UAAC4D,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJV,MAAAA,KAAK,EAAE;AADH,KADiC;AAIvCW,IAAAA,KAAK,EAAE;AACLX,MAAAA,KAAK,EAAE,KADF;AAELY,MAAAA,SAAS,EAAE;AAFN;AAJgC,GAAZ;AAAA,CAAD,CAA5B;AAUA,eAAe,SAASC,kBAAT,GAA8B;AAC3C,MAAMC,OAAO,GAAGN,SAAS,EAAzB;;AAD2C,yBAEnBjE,KAAK,CAACmB,QAAN,CAAe,KAAf,CAFmB;AAAA;AAAA,MAEpCF,IAFoC;AAAA,MAE9BuD,OAF8B;;AAAA,0BAGjBxE,KAAK,CAACmB,QAAN,CAAe,OAAf,CAHiB;AAAA;AAAA,MAGpCH,KAHoC;AAAA,MAG7BI,QAH6B;;AAK3C,MAAMqD,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,MAAME,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAc;AAChCH,IAAAA,OAAO,CAAC,KAAD,CAAP;;AAEA,QAAIG,QAAJ,EAAc;AACZvD,MAAAA,QAAQ,CAACuD,QAAD,CAAR;AACD;AACF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACJ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEM,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,QAAQ,EAAE,MADL;AAELC,MAAAA,UAAU,EAAE,KAFP;AAGLxB,MAAAA,KAAK,EAAE;AAHF,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAUE,oBAAC,qBAAD;AACE,IAAA,OAAO,EAAE;AACPe,MAAAA,KAAK,EAAEG,OAAO,CAACH;AADR,KADX;AAIE,IAAA,EAAE,EAAC,YAJL;AAKE,IAAA,WAAW,MALb;AAME,IAAA,IAAI,EAAEnD,IANR;AAOE,IAAA,OAAO,EAAEyD,WAPX;AAQE,IAAA,KAAK,EAAE1D,KART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAuBD","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n  const getTimeFunc = () => {\n    let d = new Date();\n    return d.getTime();\n  };\n  const [arr, setArr] = React.useState([]);\n  const [invalid,setInvalid]=React.useState({\n    invalidEmail:false,\n    invalidUid:false,\n  })\n  const [credentials,setCredentials]=React.useState({\n    uid:\"\",\n    name:\"\",\n    email:\"\"\n  });\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const finalValidation = () => {\n    if(!invalid.invalidEmail && !invalid.invalidUid)\n    return false;\n    return true;\n  };\n  const handledone = () => {\n    const re = finalValidation();\n    if (re === false) onClose(value);\n  };\n\n  const validate = () => {\n    const mailFormat = /^([a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(\\.[a-zA-Z0-9-]{2,4})+)*$/;\n    const name = \"email\";\n    if (credentials.email.match(mailFormat)) {\n      invalid.invalidEmail=false;\n    } else {\n      invalid.invalidEmail=true;\n    }\n  };\n  const handleChange = (event) => {\n   const { name, value } = event.target;\n   setCredentials((prev)=>{\n     return{\n       ...prev,\n       [name]:value\n     }\n   })\n   validate();    \n  };\n  return (\n    <div>\n      <Dialog\n        disableBackdropClick\n        disableEscapeKeyDown\n        maxWidth=\"sm\"\n        onEntering={handleEntering}\n        aria-labelledby=\"confirmation-dialog-title\"\n        open={open}\n        {...other}\n      >\n        <DialogTitle id=\"confirmation-dialog-title\">\n          <span\n            style={{ fontFamily: '\"Nunito\", sans-serif', color: \"#272e4f\" }}\n          >\n            Add Professors\n          </span>\n        </DialogTitle>\n        <DialogContent dividers>\n          {!!arr.length && (\n            <table>\n              <thead style={{ color: \"#2c365d\" }}>\n                <th>Email</th>\n                <th style={{ paddingLeft: \"20px\" }}>Name</th>\n                <th style={{ paddingLeft: \"20px\" }}>Unique Id</th>\n\n              </thead>\n              <tbody>\n                    <tr>\n                      <td style={{ paddingTop: \"3%\", width: \"200px\" }}>\n                        {!invalid.invalidEmail ? (\n                          <TextField\n                            name=\"prof_email\"\n                            value={credentials.email}\n                            variant=\"outlined\"\n                            type=\"email\"\n                            onChange={handleChange}\n                            placeholder=\"Eg. john@gmail.com\"\n                          />\n                        ) : (\n                          <TextField\n                            error\n                            label=\"Invalid email\"\n                            name=\"prof_email\"\n                            value={credentials.email}\n                            variant=\"outlined\"\n                            type=\"email\"\n                            onChange={handleChange}\n                            placeholder=\"Eg. john@gmail.com\"\n                          />\n                        )}\n                      </td>\n                      <td\n                        style={{\n                          paddingTop: \"3%\",\n                          paddingLeft: \"5%\",\n                          width: \"190px\"\n                        }}\n                      >\n                        <TextField\n                          variant=\"outlined\"\n                          onChange={handleChange}\n                          name=\"prof_name\"\n                          value={credentials.name}\n                          placeholder=\"Eg. john\"\n                        />\n                      </td>\n                      <td\n                        style={{\n                          paddingTop: \"3%\",\n                          paddingLeft: \"5%\",\n                          width: \"190px\"\n                        }}\n                      >\n                        <TextField\n                          variant=\"outlined\"\n                          onChange={handleChange}\n                          name=\"prof_id\"\n                          value={credentials.uid}\n                          placeholder=\"Eg. john\"\n                        />\n                      </td>\n                    </tr>\n              </tbody>\n            </table>\n          )}\n          <Button\n            style={{ marginTop: \"5%\",\n          color:\"#949cdf\",\n          opacity:\"0.85\"\n          }}\n            onClick={() => {}}\n          >\n            + Add New\n          </Button>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handledone} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"80%\",\n    maxHeight: 435\n  }\n}));\n\nexport default function ConfirmationDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(\"Notes\");\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (newValue) => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <IconButton onClick={handleClickListItem}>\n        <PersonAddIcon\n          style={{\n            fontSize: \"30px\",\n            marginLeft: \"10%\",\n            color: \"#0277bd\"\n          }}\n        />\n      </IconButton>\n      <ConfirmationDialogRaw\n        classes={{\n          paper: classes.paper\n        }}\n        id=\"dialog-box\"\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        value={value}\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}