{"ast":null,"code":"import _slicedToArray from \"/home/manjukrishna/Desktop/web_mini_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/manjukrishna/Desktop/web_mini_project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/manjukrishna/Desktop/web_mini_project/frontend/src/components/AddClassLink.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction ConfirmationDialogRaw(props) {\n  var _this = this;\n\n  var onClose = props.onClose,\n      valueProp = props.value,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"onClose\", \"value\", \"open\"]);\n\n  var _React$useState = React.useState(valueProp),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var radioGroupRef = React.useRef(null);\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      handledSubjects = _React$useState4[0],\n      setHandledSubject = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      subject = _React$useState6[0],\n      setSubject = _React$useState6[1];\n\n  var useStyles = makeStyles(function (theme) {\n    return {\n      appBar: {\n        position: \"relative\"\n      },\n      title: {\n        marginLeft: theme.spacing(2),\n        flex: 1\n      },\n      margin: {\n        margin: theme.spacing(1)\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120\n      }\n    };\n  });\n  var classes = useStyles();\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      classLink = _React$useState8[0],\n      setClassLink = _React$useState8[1];\n\n  React.useEffect(function () {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n  console.log(props.section);\n  React.useEffect(function () {\n    fetch(\"/getHandledSubjects\", {\n      method: \"POST\",\n      cache: \"no-cache\",\n      headers: {\n        \"content_type\": \"application/json\"\n      },\n      body: JSON.stringify(props.section)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data.subjects);\n      setHandledSubject(data.subjects);\n    });\n  }, []);\n\n  var handleChangeOption = function handleChangeOption(e) {\n    setSubject(e.target.value);\n  };\n\n  var handleEntering = function handleEntering() {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  var handleOk = function handleOk() {\n    if (subject && classLink) {\n      wr;\n      fetch(\"/addClassLink\", {\n        method: \"POST\",\n        cache: \"no-cache\",\n        headers: {\n          \"content_type\": \"application/json\"\n        },\n        body: JSON.stringify(props.section)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data.subjects);\n        setHandledSubject(data.subjects);\n      });\n    }\n\n    onClose(value);\n    setClassLink('');\n  };\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n  };\n\n  var handleSectionChange = function handleSectionChange(e) {\n    var name = e.name,\n        value = e.value;\n    setClassLink(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, Object.assign({\n    disableBackdropClick: true,\n    disableEscapeKeyDown: true,\n    maxWidth: \"xs\",\n    onEntering: handleEntering,\n    \"aria-labelledby\": \"confirmation-dialog-title\",\n    open: open\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(DialogTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontFamily: '\"Nunito\", sans-serif',\n      color: \"#272e4f\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"Add Class Link\")), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginBottom: \"15px\",\n      fontSize: \"18px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Class Link\"), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    inputProps: {\n      min: 0,\n      style: {\n        fontSize: \"16px\"\n      }\n    },\n    style: {\n      width: \"100%\"\n    },\n    value: classLink,\n    name: \"classLink\",\n    onChange: handleSectionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-simple-select-label\",\n    id: \"demo-simple-select\",\n    value: subject,\n    onChange: handleChangeOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, handledSubjects.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      value: item[0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 20\n      }\n    }, item[0]);\n  })))))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleOk,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, \"Ok\")));\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      maxWidth: 360\n    },\n    paper: {\n      width: \"80%\",\n      height: 300\n    }\n  };\n});\nexport default function ConfirmationDialog(props) {\n  var classes = useStyles();\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      open = _React$useState10[0],\n      setOpen = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"Dione\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      value = _React$useState12[0],\n      setValue = _React$useState12[1];\n\n  var handleClickListItem = function handleClickListItem() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose(newValue) {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  var setFlag = function setFlag() {\n    props.flag(1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    component: \"div\",\n    role: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Add class\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    style: {\n      marginTop: \"-20%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    style: {\n      fontSize: \"30px\",\n      color: \"#adce74\",\n      opacity: \"0.8\"\n    },\n    onClick: handleClickListItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ConfirmationDialogRaw, {\n    classes: {\n      paper: classes.paper\n    },\n    id: \"ringtone-menu\",\n    keepMounted: true,\n    open: open,\n    onClose: handleClose,\n    value: value,\n    section: props.section,\n    flag: setFlag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/manjukrishna/Desktop/web_mini_project/frontend/src/components/AddClassLink.jsx"],"names":["React","PropTypes","TextField","Button","FormControl","Select","Tooltip","MenuItem","AddCircleIcon","IconButton","List","DialogTitle","DialogContent","DialogActions","Dialog","withStyles","makeStyles","ConfirmationDialogRaw","props","onClose","valueProp","value","open","other","useState","setValue","radioGroupRef","useRef","handledSubjects","setHandledSubject","subject","setSubject","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","margin","formControl","minWidth","classes","classLink","setClassLink","useEffect","console","log","section","fetch","method","cache","headers","body","JSON","stringify","then","response","json","data","subjects","handleChangeOption","e","target","handleEntering","current","focus","handleOk","wr","handleChange","event","handleSectionChange","name","fontFamily","color","marginBottom","fontSize","min","style","width","map","item","index","propTypes","func","isRequired","bool","string","root","maxWidth","paper","height","ConfirmationDialog","setOpen","handleClickListItem","handleClose","newValue","setFlag","flag","marginTop","opacity"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from '@material-ui/core/MenuItem';\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction ConfirmationDialogRaw(props) {\n  const { onClose, value: valueProp, open, ...other } = props;\n  const [value, setValue] = React.useState(valueProp);\n  const radioGroupRef = React.useRef(null);\n  const [handledSubjects,setHandledSubject]=React.useState([]);\n  const [subject,setSubject]=React.useState();\n\n  const useStyles = makeStyles((theme) => ({\n    appBar: {\n      position: \"relative\"\n    },\n    title: {\n      marginLeft: theme.spacing(2),\n      flex: 1\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n  }));\n\n  const classes = useStyles();  \n\n  const [classLink,setClassLink]=React.useState('');\n  React.useEffect(() => {\n    if (!open) {\n      setValue(valueProp);\n    }\n  }, [valueProp, open]);\n  \n  console.log(props.section);\n  React.useEffect(()=>{\n    fetch(\"/getHandledSubjects\",{\n      method:\"POST\",\n      cache:\"no-cache\",\n      headers:{\n        \"content_type\":\"application/json\",\n      },\n      body:JSON.stringify(props.section)\n     }).then(response=>response.json()).then\n    (data=>{\n       console.log(data.subjects);\n      setHandledSubject(data.subjects);\n    });\n  },[]);\n\n  const handleChangeOption =(e)=>{\n    setSubject(e.target.value);\n }\n\n  const handleEntering = () => {\n    if (radioGroupRef.current != null) {\n      radioGroupRef.current.focus();\n    }\n  };\n\n  const handleOk = () => {\n    if(subject && classLink){\n      wr\n    fetch(\"/addClassLink\",{\n      method:\"POST\",\n      cache:\"no-cache\",\n      headers:{\n        \"content_type\":\"application/json\",\n      },\n      body:JSON.stringify(props.section)\n     }).then(response=>response.json()).then\n    (data=>{\n       console.log(data.subjects);\n      setHandledSubject(data.subjects);\n    });\n   }\n    onClose(value);\n    setClassLink('');\n\n  };\n  \n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n  const handleSectionChange=(e)=>{\n    const {name,value}=e;\n    setClassLink(value);\n  }\n  return (\n    <Dialog\n      disableBackdropClick\n      disableEscapeKeyDown\n      maxWidth=\"xs\"\n      onEntering={handleEntering}\n      aria-labelledby=\"confirmation-dialog-title\"\n      open={open}\n      {...other}\n    >\n      <DialogTitle>\n        <span style={{ fontFamily: '\"Nunito\", sans-serif', color: \"#272e4f\" }}>\n          Add Class Link\n        </span>\n      </DialogTitle>\n      <DialogContent dividers>\n        <div style={{ marginBottom: \"15px\", fontSize: \"18px\" }}>Class Link</div>\n        <TextField\n          variant=\"outlined\"\n          inputProps={{\n            min: 0,\n            style: { fontSize: \"16px\" }\n          }}\n          style={{width:\"100%\"}}\n          value={classLink}\n          name=\"classLink\"\n          onChange={handleSectionChange}\n        />\n        <table>\n          <tr>\n            <FormControl className={classes.formControl}>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={subject}\n                onChange={handleChangeOption}\n              >{\n                handledSubjects.map((item,index)=>{\n                  return(\n                   <MenuItem value={item[0]}>{item[0]}</MenuItem>\n                  );\n                })\n              }\n               </Select>\n           </FormControl>\n          </tr>\n        </table>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleOk} color=\"primary\">\n          Ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nConfirmationDialogRaw.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360\n  },\n  paper: {\n    width: \"80%\",\n    height: 300\n  }\n}));\n\nexport default function ConfirmationDialog(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(\"Dione\");\n\n  const handleClickListItem = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (newValue) => {\n    setOpen(false);\n\n    if (newValue) {\n      setValue(newValue);\n    }\n  };\n\n  const setFlag=()=>{\n    props.flag(1);\n  }\n  return (\n    <div className={classes.root}>\n      <List component=\"div\" role=\"list\">\n        <Tooltip title=\"Add class\">\n          <IconButton style={{marginTop:\"-20%\"}}>\n            <AddCircleIcon\n              style={{\n                fontSize: \"30px\",\n                color: \"#adce74\",\n                opacity: \"0.8\"\n              }}\n              onClick={handleClickListItem}\n            />\n          </IconButton>\n        </Tooltip>\n        <ConfirmationDialogRaw\n          classes={{\n            paper: classes.paper\n          }}\n          id=\"ringtone-menu\"\n          keepMounted\n          open={open}\n          onClose={handleClose}\n          value={value}\n          section={props.section}\n          flag={setFlag}\n        />\n      </List>\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}